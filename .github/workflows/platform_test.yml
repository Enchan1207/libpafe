name: Build on multi-platform

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install libusb from apt
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install "libusb-1.0-*"

      - name: Install libusb from brew
        if: startsWith(matrix.os, 'macos')
        run: brew install libusb

      - name: Cache libusb archive
        if: startsWith(matrix.os, 'windows')
        id: cache-libusb
        uses: actions/cache@v2
        with:
          path: libusb-latest.7z
          key: libusb-${{ hashFiles('libusb-latest.7z') }}

      - name: Install libusb from GitHub Release
        if: startsWith(matrix.os, 'windows') && steps.cache-libusb.outputs.cache-hit != 'true'
        shell: bash
        run: |
          binaryURL=$(curl -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/libusb/libusb/releases/latest | jq -r '.assets[] | select(.browser_download_url | endswith("7z")) .browser_download_url')
          curl -L $binaryURL -o libusb-latest.7z

      - name: Install libusb from GitHub Release
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          7z x libusb-latest.7z -olibusb-latest
          export CMAKE_PREFIX_PATH="$(realpath libusb-latest/MinGW64/dll);$(realpath libusb-latest/include)"

      - name: Configure CMake
        shell: bash
        run: |
          mkdir build
          cd build
          cmake .. -DLIBPAFE_BUILD_SAMPLES=ON -DLIBPAFE_BUILD_SHARED_LIBS=ON

      - name: Build
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: cmake --build .
